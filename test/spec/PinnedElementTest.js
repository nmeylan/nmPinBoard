// Generated by CoffeeScript 1.7.1
(function() {
  describe("Pinned element test", function() {
    var pinnedElementView;
    pinnedElementView = void 0;
    beforeEach(function() {
      return pinnedElementView = new nmPinBoard.PinnedElementView({
        model: new nmPinBoard.PinnedElement()
      });
    });
    describe("Create new Pinned element", function() {
      it("Success", function() {
        return expect(pinnedElementView.model).toBeDefined();
      });
      return it("Default id", function() {
        return expect(pinnedElementView.model.get("id")).toEqual(-1);
      });
    });
    describe("Use validation", function() {
      it("Validate title can't be blank", function() {
        pinnedElementView.model.set({
          'title': ''
        }, {
          validate: true
        });
        return expect(pinnedElementView.model.isValid()).toBeFalsy();
      });
      it("Validate content can't be blank", function() {
        pinnedElementView.model.set({
          'content': ''
        }, {
          validate: true
        });
        return expect(pinnedElementView.model.isValid()).toBeFalsy();
      });
      it("Validate positionX not a number", function() {
        var custo;
        custo = pinnedElementView.model.get("customization");
        custo.set({
          "position": {
            offsetX: "ff",
            offsetY: 0
          }
        }, {
          validate: true
        });
        pinnedElementView.model.set({
          "customization": custo
        }, {
          validate: true
        });
        return expect(pinnedElementView.model.isValid()).toBeFalsy();
      });
      it("Validate positionY not a number", function() {
        var custo;
        custo = pinnedElementView.model.get("customization");
        custo.set({
          "position": {
            offsetX: 50,
            offsetY: "ff"
          }
        }, {
          validate: true
        });
        pinnedElementView.model.set({
          "customization": custo
        }, {
          validate: true
        });
        return expect(pinnedElementView.model.isValid()).toBeFalsy();
      });
      it("Validate color can't be blank", function() {
        var custo;
        custo = pinnedElementView.model.get("customization");
        custo.set({
          "color": ' '
        }, {
          validate: true
        });
        pinnedElementView.model.set({
          "customization": custo
        }, {
          validate: true
        });
        return expect(pinnedElementView.model.isValid()).toBeFalsy();
      });
      it("Validate opacity not a number", function() {
        var custo;
        custo = pinnedElementView.model.get("customization");
        custo.set({
          "opacity": 'gg'
        }, {
          validate: true
        });
        pinnedElementView.model.set({
          "customization": custo
        }, {
          validate: true
        });
        return expect(pinnedElementView.model.isValid()).toBeFalsy();
      });
      it("Validate opacity not in range > 1", function() {
        var custo;
        custo = pinnedElementView.model.get("customization");
        custo.set({
          "opacity": 1.2
        }, {
          validate: true
        });
        pinnedElementView.model.set({
          "customization": custo
        }, {
          validate: true
        });
        return expect(pinnedElementView.model.isValid()).toBeFalsy();
      });
      return it("Validate opacity not in range < 0", function() {
        var custo;
        custo = pinnedElementView.model.get("customization");
        custo.set({
          "opacity": -0.01
        }, {
          validate: true
        });
        pinnedElementView.model.set({
          "customization": custo
        }, {
          validate: true
        });
        return expect(pinnedElementView.model.isValid()).toBeFalsy();
      });
    });
    return afterEach(function() {
      return pinnedElementView = void 0;
    });
  });

}).call(this);
